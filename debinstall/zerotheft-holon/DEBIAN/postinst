#!/bin/bash
# Define the filename
filename='/opt/.zerotheft/build/config.js'
json_filename='/opt/.zerotheft/config.json'
integrity_profile_info='/opt/.zerotheft/integrity_profile.json'
integrity_profile_filename='/opt/.zerotheft/integrity_profile.yaml'
auto_update=true
dependencies_reinstall=true
timestamp=$(date "+%s")

source_list='/etc/apt/sources.list.d/zerotheft-source.list'
config_json='/home/zt-holon/.zerotheft/config.json'
if [ ! -d "/home/zt-holon/.zerotheft" ]; then 
      # ask holon url
      read -p "Enter Your Holon URL(http://<holon_url>): " holon_address

      #ask holon port
      read -p "Enter PORT: " port
      valid_yaml=false
      while [ "$valid_yaml" != true ]
      do
            read -p "Enter a valid url for integrity profile: " integrity_profile
            content=$(curl -L $integrity_profile)
            json_validator=$(curl -X POST  --data "data=$(cat $content)" https://www.lint-trilogy.com/lint/yaml/json)
            valid_yaml=`echo "$json_validator" | jq -r '.valid'`
            echo $valid_yaml
            if [ $valid_yaml != true ]; then
                  echo "Please have a valid yaml in the given link"
            fi
            echo $content >> $integrity_profile_filename
      done
      echo "{ \"PROFILE_URL\": \"$integrity_profile\" }" >> $integrity_profile_info

      # Check the holon address is empty or not
      if [ "$holon_address" != "" ]; then
            #remove trailing slash from url
            [[ "${holon_address}" == */ ]] && holon_address="${holon_address: : -1}"
            # Append the text by using '>>' symbol
            truncate -s 0 $filename
            echo "var BASE_URL = '$holon_address'" >> $filename
            echo "{ \"BASE_URL\": \"$holon_address\", \"PORT\":$port, \"AUTO_UPDATE\":\"true\",\"VERSION_TIMESTAMP\":$timestamp }" >> $json_filename
      fi
      echo  "Holon running at $holon_address:$port"

      
      #create user
      adduser zt-holon --gecos "" --disabled-password
      usermod -aG sudo zt-holon

      rm -rf /home/zt-holon/.zerotheft
      mv /opt/.zerotheft /home/zt-holon/

      #add cron tab in the shell script
      touch /home/zt-holon/cron.log  

else
      #parse if config.json found
      port=$(jq .PORT ${config_json})
      auto_update=$(jq .AUTO_UPDATE ${config_json})
      dependencies_reinstall=false

      echo 'now cp begins.....'
      cp -rf /opt/.zerotheft /home/zt-holon/

fi
#find and replace port in systemd service file
sed -i "s/40107/$port/" /etc/systemd/system/zerotheft-holon.service


#unzip chromium
if test -f "/home/zt-holon/chromium/linux-637110/chrome-linux.zip"; then
      echo "Chromium folder exists."
else
      echo "Chromium downloading..."
      rm -rf /home/zt-holon/chromium/linux-637110
      mkdir -p /home/zt-holon/chromium/linux-637110
      wget storage.googleapis.com/chromium-browser-snapshots/Linux_x64/637110/chrome-linux.zip -O /home/zt-holon/chromium/linux-637110/chrome-linux.zip
      unzip /home/zt-holon/chromium/linux-637110/chrome-linux.zip -d /home/zt-holon/chromium/linux-637110/
fi

echo 'New way of adding cron......'
(crontab -l | grep "/home/zt-holon/.zerotheft/update.sh >> /home/zt-holon/cron.log 2>&1" || echo "*/5 * * * *  /home/zt-holon/.zerotheft/update.sh >> /home/zt-holon/cron.log 2>&1") | crontab -
echo "********** cron job added **********"


#chown of zt-report directory
chown -R zt-holon:zt-holon /home/zt-holon
echo "********** ownership updated **********"

if [ "$dependencies_reinstall" = true ]; then 
      #start redis service
      # rm -rf /home/zt-holon/redis*
      # wget http://download.redis.io/releases/redis-6.0.8.tar.gz -P /home/zt-holon
      # tar xzf /home/zt-holon/redis-6.0.8.tar.gz -C /home/zt-holon
      # make -C /home/zt-holon/redis-6.0.8
      echo '********** enscript **********'
      footer='/home/zt-holon/.zerotheft/footer.hdr'
      cd /home/ubuntu && mkdir .enscript && cd .enscript && cp $footer footer.hdr
      
      su - zt-holon -c 'cd /home/zt-holon/.zerotheft && git clone https://gitlab.com/pdftk-java/pdftk.git'
      echo '********** pdftk git fetched ***********'
      su - zt-holon -c 'cd /home/zt-holon/.zerotheft/pdftk && mkdir lib && ln -st lib /usr/share/java/{commons-lang3,bcprov}.jar && ant jar'
      #install zt-report dependencies
      su - zt-holon -c 'pip3 install jupyter'
      su - zt-holon -c 'pip3 install requests'
      su - zt-holon -c 'pip3 install --user matplotlib'
      su - zt-holon -c 'pip3 install --user pandas'
      su - zt-holon -c 'pip3 install --user myst_nb'
      su - zt-holon -c 'export PATH="$HOME/.local/bin:$PATH" && source ~/.bashrc'
      echo "********** all packages successfully installed **********"
fi


#add release in sourcelist
touch ${source_list}
chown zt-holon:zt-holon ${source_list}
if [ ! -f /home/zt-holon/.zt/env.json ]; then
      source_file=`cat /home/zt-holon/.zerotheft/source.json`
      source_url=`echo ${source_file} | jq '.source' | sed 's/"//g'`
      echo ${source_url}
      grep -qxF "${source_url}" ${source_list} || echo ${source_url}  >> ${source_list}
elif [[ "$auto_update" = "true" ]]; then 
      env_file=`cat /home/zt-holon/.zt/env.json`
      env=`echo ${env_file} | jq '.MODE' | sed 's/"//g'`

      grep -qxF "deb [trusted=yes] https://zerotheft-holon-${env}.s3.us-east-1.amazonaws.com/releases stable main" ${source_list} || echo "deb [trusted=yes] https://zerotheft-holon-${env}.s3.us-east-1.amazonaws.com/releases stable main"  >> ${source_list}
fi
echo "********** sources list updated **********"

#update the version installation timestamp
tmp=$(mktemp)
jq ".VERSION_TIMESTAMP = $timestamp" $config_json > "$tmp" && mv "$tmp" $config_json
chown zt-holon:zt-holon $config_json
#reload systemd service files
# systemctl enable zt-redis
systemctl enable zerotheft-holon
systemctl daemon-reload
systemctl start zerotheft-holon
# systemctl start zt-redis

